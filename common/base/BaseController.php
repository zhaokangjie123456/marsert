<?php


namespace common\base;

use Yii;
use yii\filters\VerbFilter;
use yii\rest\ActiveController;
use yii\filters\AccessControl;
use yii\filters\Cors;
use yii\helpers\ArrayHelper;
/**
 * Site controller
 */
class BaseController extends ActiveController
{
    private $actionStart = 0;
    private $actionEnd = 0;
    public $requests;
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->requests = yii::$app->request->post()??yii::$app->request->get();
    }

    /**
     * 分页配置
     * @var array
     */
    public $serializer = [
        'class' => 'yii\rest\Serializer',
        'collectionEnvelope' => 'items',
//        'linksEnvelope' => 'links',
        'metaEnvelope' => 'page'
    ];

    public function actions()
    {
        $actions = parent::actions();
        // 注销系统自带的实现方法
        unset($actions['index'], $actions['view'], $actions['update'], $actions['delete'], $actions['create']);
        return $actions;
    }
    /*
     * 开始新添加
     * */
    public function __construct($id, $module, $config = [])
    {
        parent::__construct($id, $module, $config);
    }

    //设置跨域
    public function beforeAction($action)
    {
        //允许多个指定的域名访问接口
        $allow_origin = array(
            '*',
            'https://www.youjingxi.com.cn',
        );
        //这个变量是允许哪个域名访问此项目
        $origin = !empty($_SERVER['HTTP_ORIGIN']) ? $_SERVER['HTTP_ORIGIN'] : '';
        //判断数组中是否有指定的域名如果没有跨域
//        if(in_array($origin,$allow_origin)){
//            header('Access-Control-Allow-Origin:' . $origin);
            header('Access-Control-Allow-Origin:*');
            header("Access-Control-Allow-Methods: GET, POST, OPTIONS");
            header('Access-Control-Allow-Credentials: true');
            //header("Access-Control-Allow-Headers: Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since");
            header("Access-Control-Allow-Headers: Origin,X-Requested-With,Content-Type,Accept");

            if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {
                \Yii::$app->response->setStatusCode(204);
                \Yii::$app->end(0);
            }



            return parent::beforeAction($action);
    }
    /**
     * 錯誤提示
     * @param null $data
     */
    protected static function error($data = null, $code = 1002)
    {
        if (empty($data)) {
            $msg = '没有任何信息';
        } elseif (is_array($data)) {
            $msg = array_pop($data);
            if (!is_string($msg))
                $msg = '返回参数必须是一维数组';
        } elseif (is_bool($data)) {
            if ($data)
                $msg = 'true';
            else $msg = 'false';
        } elseif (is_object($data)) {
            $msg = 'message is object';
        } else {
            $msg = $data;
        }
        throw new ErrorException($msg, $code);
    }

    public function isRequired($param, $data = array())
    {
        $data = $data??$this->requests;
        $array = array();
        //if ($checktoken) self::CheckToken();
        foreach ($param as $k => $v) {
            if (!isset($data[$v])) {
                self::error('缺少参数：' . $v);
            } else {
                if (empty($data[$v])) {
                    self::error('参数' . $v . '不能为空');
                }
            }
            $array[$v] = $data[$v];
        }
        return $array;
    }
}